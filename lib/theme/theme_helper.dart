import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:school_management_system/core/utils/pref_utils.dart';
import 'package:school_management_system/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  final _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  final Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  final Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.blueA400,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 18.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray60001,
          fontSize: 14.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray500,
          fontSize: 12.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 40.fSize,
          fontFamily: 'Bebas Neue',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.gray800,
          fontSize: 34.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 30.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray800,
          fontSize: 26.fSize,
          fontFamily: 'Bebas Neue',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 24.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray600,
          fontSize: 12.fSize,
          fontFamily: 'Plus Jakarta Display',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray60001,
          fontSize: 20.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 16.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray800,
          fontSize: 14.fSize,
          fontFamily: 'Source Sans Pro',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF7292CF),
    primaryContainer: Color(0XFF272727),

    // Error colors
    errorContainer: Color(0XFF5278C1),
    onError: Color(0XFF46D9BF),
    onErrorContainer: Color(0XFF101010),

    // On colors(text colors)
    onPrimary: Color(0X871B1A57),
    onPrimaryContainer: Color(0XFFA9F2A4),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => const Color(0XFFF2C94C);
  Color get amber30001 => const Color(0XFFFFD348);
  Color get amber30002 => const Color(0XFFFFD066);

  // Black
  Color get black900 => const Color(0XFF000000);

  // Blue
  Color get blue100 => const Color(0XFFC2D7F2);
  Color get blue10001 => const Color(0XFFD1DFFB);
  Color get blue50 => const Color(0XFFE6EFFF);
  Color get blue5001 => const Color(0XFFE1E9FC);
  Color get blue600 => const Color(0XFF2D9CDB);
  Color get blue60026 => const Color(0X262C9CDB);
  Color get blue800 => const Color(0XFF074BD1);
  Color get blueA400 => const Color(0XFF2F80ED);

  // BlueGray
  Color get blueGray100 => const Color(0XFFC6CBD4);
  Color get blueGray10001 => const Color(0XFFD9D9D9);
  Color get blueGray300 => const Color(0XFFA1A1BC);
  Color get blueGray600 => const Color(0XFF4E5D7B);
  Color get blueGray60019 => const Color(0X19466086);
  Color get blueGray6001901 => const Color(0X19466087);
  Color get blueGray900 => const Color(0XFF313131);
  Color get blueGray90001 => const Color(0XFF323643);
  Color get blueGray90090 => const Color(0X90333333);

  // DeepOrange
  Color get deepOrange100 => const Color(0XFFFFB1B1);
  Color get deepOrangeA700 => const Color(0XFFD83300);

  // Gray
  Color get gray100 => const Color(0XFFF4F4F4);
  Color get gray10001 => const Color(0XFFF7F7F7);
  Color get gray200 => const Color(0XFFECECEC);
  Color get gray20001 => const Color(0XFFEAEAEA);
  Color get gray300 => const Color(0XFFE1E3E8);
  Color get gray30001 => const Color(0XFFE5E7E8);
  Color get gray30002 => const Color(0XFFDBDBDB);
  Color get gray400 => const Color(0XFFCACACA);
  Color get gray40001 => const Color(0XFFC1C1C1);
  Color get gray40002 => const Color(0XFFBDBDBD);
  Color get gray40003 => const Color(0XFFB8B8B8);
  Color get gray50 => const Color(0XFFF5F6FC);
  Color get gray500 => const Color(0XFFA5A5A5);
  Color get gray50001 => const Color(0XFF989898);
  Color get gray600 => const Color(0XFF707070);
  Color get gray60001 => const Color(0XFF777777);
  Color get gray800 => const Color(0XFF3A3A3A);
  Color get gray900 => const Color(0XFF202020);

  // Green
  Color get green400 => const Color(0XFF6AC259);
  Color get green800 => const Color(0XFF0BAC00);

  // Greend
  Color get green7009d => const Color(0X9D1CAB0F);

  // Indigo
  Color get indigo200 => const Color(0XFF96B1E5);
  Color get indigo300 => const Color(0XFF6789CA);
  Color get indigo30001 => const Color(0XFF6184C7);
  Color get indigo30002 => const Color(0XFF6688CA);
  Color get indigo30003 => const Color(0XFF859FD1);
  Color get indigo30004 => const Color(0XFF6585C6);
  Color get indigo600 => const Color(0XFF2855AE);

  // LightBlue
  Color get lightBlue900 => const Color(0XFF05518B);

  // LightGreen
  Color get lightGreenA700 => const Color(0XFF4CE417);
  Color get lightGreenA70001 => const Color(0XFF4CE416);

  // Orange
  Color get orange50 => const Color(0XFFFCF3E2);
  Color get orangeA200 => const Color(0XFFF2994A);

  // Red
  Color get red300 => const Color(0XFFD67676);
  Color get red600 => const Color(0XFFE92E30);
  Color get red700 => const Color(0XFFE92020);

  // Teal
  Color get teal200 => const Color(0XFF90CCD6);
  Color get teal300 => const Color(0XFF5596A5);
  Color get teal400 => const Color(0XFF4094A8);
  Color get teal900 => const Color(0XFF003849);

  // White
  Color get whiteA700 => const Color(0XFFFFFFFF);

  // Yellow
  Color get yellow200 => const Color(0XFFFFF89A);
  Color get yellow800 => const Color(0XFFE9AE24);
  Color get yellow900 => const Color(0XFFE8782D);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
